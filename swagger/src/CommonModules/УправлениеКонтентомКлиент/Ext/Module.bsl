
Функция ЭкспортИзображенийВлокальныйКаталог(ТекстОшибки, ЛокальныйКаталог, ТолькоНеВыгруженные, МассивСсылок = Неопределено) Экспорт 
	Результат = Истина;
	
	МассивДанных = УправлениеКонтентом.ПолучитьМассивИзображений(ТолькоНеВыгруженные, МассивСсылок);
	
	Для каждого Данные Из МассивДанных Цикл
		Попытка
			ДД = ПолучитьИзВременногоХранилища(Данные.Адрес);
			ДД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла);
			Если УправлениеКонтентом.УстановитьОтметкуОВыгрузке(Данные.Ссылка) Тогда
				Сообщить("Объект " + Данные.Ссылка + " успешно выгружен в " + ЛокальныйКаталог);
			КонецЕсли;
			УдалитьИзВременногоХранилища(Данные.Адрес);
		Исключение
		    Результат = Ложь;
			ТекстОшибки = ТекстОшибки + ОписаниеОшибки() + Символы.ПС;
		КонецПопытки;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ЭкспортСтилейВлокальныйКаталог(ТекстОшибки, ЛокальныйКаталог, ТолькоНеВыгруженные, МассивСсылок = Неопределено) Экспорт 
	Результат = Истина;
	
	МассивДанных = УправлениеКонтентом.ПолучитьМассивСтилей(ТолькоНеВыгруженные, МассивСсылок);
	
	Для каждого Данные Из МассивДанных Цикл
		Попытка
			ТекстСтиля = Данные.Текст;
			Ответы.ОбработатьТекстСтраницы(ТекстСтиля, Неопределено);
			
			ТД = Новый ТекстовыйДокумент;
			ТД.УстановитьТекст(ТекстСтиля);
			ТД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла, КодировкаТекста.UTF8);
			Если УправлениеКонтентом.УстановитьОтметкуОВыгрузке(Данные.Ссылка) Тогда
				Сообщить("Объект " + Данные.Ссылка + " успешно выгружен в " + ЛокальныйКаталог);
			КонецЕсли;
		Исключение
		    Результат = Ложь;
			ТекстОшибки = ТекстОшибки + ОписаниеОшибки() + Символы.ПС;
		КонецПопытки;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ЭкспортСкриптовВлокальныйКаталог(ТекстОшибки, ЛокальныйКаталог, ТолькоНеВыгруженные, МассивСсылок = Неопределено) Экспорт 
	Результат = Истина;
	
	МассивДанных = УправлениеКонтентом.ПолучитьМассивСкриптов(ТолькоНеВыгруженные, МассивСсылок);
	
	Для каждого Данные Из МассивДанных Цикл
		Попытка
			ТекстСкрипта = Данные.Текст;
			Ответы.ОбработатьТекстСтраницы(ТекстСкрипта, Неопределено);
			
			ТД = Новый ТекстовыйДокумент;
			ТД.УстановитьТекст(ТекстСкрипта);
			ТД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла, КодировкаТекста.UTF8);
			Если УправлениеКонтентом.УстановитьОтметкуОВыгрузке(Данные.Ссылка) Тогда
				Сообщить("Объект " + Данные.Ссылка + " успешно выгружен в " + ЛокальныйКаталог);
			КонецЕсли;
		Исключение
		    Результат = Ложь;
			ТекстОшибки = ТекстОшибки + ОписаниеОшибки() + Символы.ПС;
		КонецПопытки;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ЭкспортФайловВлокальныйКаталог(ТекстОшибки, ЛокальныйКаталог, ТолькоНеВыгруженные, МассивСсылок = Неопределено) Экспорт 
	Результат = Истина;
	
	МассивДанных = УправлениеКонтентом.ПолучитьМассивФайлов(ТолькоНеВыгруженные, МассивСсылок);
	
	Для каждого Данные Из МассивДанных Цикл
		Попытка
			Если Данные.ТекстовыйФайл Тогда
				ТекстСкрипта = Данные.Текст;
				Ответы.ОбработатьТекстСтраницы(ТекстСкрипта, Неопределено);
				
				ТД = Новый ТекстовыйДокумент;
				ТД.УстановитьТекст(ТекстСкрипта);
				ТД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла, КодировкаТекста.UTF8);
			Иначе
				ДД = ПолучитьИзВременногоХранилища(Данные.Адрес);
				ДД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла);
			КонецЕсли;
			
			Если УправлениеКонтентом.УстановитьОтметкуОВыгрузке(Данные.Ссылка) Тогда
				Сообщить("Объект " + Данные.Ссылка + " успешно выгружен в " + ЛокальныйКаталог);
			КонецЕсли;
			УдалитьИзВременногоХранилища(Данные.Адрес);
		Исключение
		    Результат = Ложь;
			ТекстОшибки = ТекстОшибки + ОписаниеОшибки() + Символы.ПС;
		КонецПопытки;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ЭкспортИзображенияВлокальныйКаталог(Ссылка, ТекстОшибки, ЛокальныйКаталог) Экспорт 
	Результат = Истина;
	ЛокКаталог = Новый Файл(ЛокальныйКаталог);
	Если Не ЛокКаталог.Существует() Тогда
		СоздатьКаталог(ЛокальныйКаталог);
	КонецЕсли;
	
	Данные = УправлениеКонтентом.ПолучитьДанныеИзображения(Ссылка);
	Попытка
		ДД = ПолучитьИзВременногоХранилища(Данные.Адрес);
		ДД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла);
		Если УправлениеКонтентом.УстановитьОтметкуОВыгрузке(Данные.Ссылка) Тогда
			//Сообщить("Объект " + Данные.Ссылка + " успешно выгружен в " + ЛокальныйКаталог);
		КонецЕсли;
		УдалитьИзВременногоХранилища(Данные.Адрес);
	Исключение
		Результат = Ложь;
		ТекстОшибки = ТекстОшибки + ОписаниеОшибки() + Символы.ПС;
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция ЭкспортСтиляВлокальныйКаталог(Ссылка, ТекстОшибки, ЛокальныйКаталог) Экспорт 
	Результат = Истина;
	ЛокКаталог = Новый Файл(ЛокальныйКаталог);
	Если Не ЛокКаталог.Существует() Тогда
		СоздатьКаталог(ЛокальныйКаталог);
	КонецЕсли;
	
	Данные = УправлениеКонтентом.ПолучитьДанныеСтиля(Ссылка);
		Попытка
			ТекстСтиля = ПолучитьИзВременногоХранилища(Данные.Текст);
			Ответы.ОбработатьТекстСтраницы(ТекстСтиля, Неопределено);
			
			ТД = Новый ТекстовыйДокумент;
			ТД.УстановитьТекст(ТекстСтиля);
			ТД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла, КодировкаТекста.UTF8);
			Если УправлениеКонтентом.УстановитьОтметкуОВыгрузке(Данные.Ссылка) Тогда
				//Сообщить("Объект " + Данные.Ссылка + " успешно выгружен в " + ЛокальныйКаталог);
			КонецЕсли;
		Исключение
			Результат = Ложь;
			ТекстОшибки = ТекстОшибки + ОписаниеОшибки() + Символы.ПС;
		КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция ЭкспортСкриптаВлокальныйКаталог(Ссылка, ТекстОшибки, ЛокальныйКаталог) Экспорт 
	Результат = Истина;
	ЛокКаталог = Новый Файл(ЛокальныйКаталог);
	Если Не ЛокКаталог.Существует() Тогда
		СоздатьКаталог(ЛокальныйКаталог);
	КонецЕсли;
	
	Данные = УправлениеКонтентом.ПолучитьДанныеСкрипта(Ссылка);
	Попытка
		Если Данные.ТекстовыйФайл Тогда
			Текст = ПолучитьИзВременногоХранилища(Данные.Текст);
			Ответы.ОбработатьТекстСтраницы(Текст, Неопределено);
			
			ТД = Новый ТекстовыйДокумент;
			ТД.УстановитьТекст(Текст);
			ТД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла, КодировкаТекста.UTF8);
		Иначе
			ДД = ПолучитьИзВременногоХранилища(Данные.Адрес);
			ДД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла);
		КонецЕсли;
		
		Если УправлениеКонтентом.УстановитьОтметкуОВыгрузке(Данные.Ссылка) Тогда
			//Сообщить("Объект " + Данные.Ссылка + " успешно выгружен в " + ЛокальныйКаталог);
		КонецЕсли;
	Исключение
		Результат = Ложь;
		ТекстОшибки = ТекстОшибки + ОписаниеОшибки() + Символы.ПС;
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция ЭкспортФайлаВлокальныйКаталог(Ссылка, ТекстОшибки, ЛокальныйКаталог) Экспорт 
	Результат = Истина;
	ЛокКаталог = Новый Файл(ЛокальныйКаталог);
	Если Не ЛокКаталог.Существует() Тогда
		СоздатьКаталог(ЛокальныйКаталог);
	КонецЕсли;
	
	Данные = УправлениеКонтентом.ПолучитьДанныеФайла(Ссылка);
	Попытка
		Если Данные.ТекстовыйФайл Тогда
			Текст = ПолучитьИзВременногоХранилища(Данные.Текст);
			Ответы.ОбработатьТекстСтраницы(Текст, Неопределено);
			
			ТД = Новый ТекстовыйДокумент;
			ТД.УстановитьТекст(Текст);
			ТД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла, КодировкаТекста.UTF8);
		Иначе
			ДД = ПолучитьИзВременногоХранилища(Данные.Адрес);
			ДД.Записать(ЛокальныйКаталог + "\" + Данные.ИмяФайла);
		КонецЕсли;
		
		Если УправлениеКонтентом.УстановитьОтметкуОВыгрузке(Данные.Ссылка) Тогда
			//Сообщить("Объект " + Данные.Ссылка + " успешно выгружен в " + ЛокальныйКаталог);
		КонецЕсли;
		УдалитьИзВременногоХранилища(Данные.Адрес);
	Исключение
		Результат = Ложь;
		ТекстОшибки = ТекстОшибки + ОписаниеОшибки() + Символы.ПС;
	КонецПопытки;
	
	
	Возврат Результат;
КонецФункции
